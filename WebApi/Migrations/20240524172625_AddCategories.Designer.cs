// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApi.Repository;

#nullable disable

namespace WebApi.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    [Migration("20240524172625_AddCategories")]
    partial class AddCategories
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebApi.Entities.Models.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CategoryId");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("SubTitle")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("69018be2-e569-40c2-bcbb-5a85de5a369f"),
                            ImageUrl = "https://cdn.shopify.com/s/files/1/1706/9177/products/NEWAppleMacbookProwithM1ProChip14InchLaptop2021ModelMKGQ3LL_A_16GB_1TBSSD_custommacbd.jpg?v=1659592838",
                            SubTitle = "",
                            Title = "Computers and Laptops"
                        },
                        new
                        {
                            Id = new Guid("5737cb06-f21d-489b-add1-e49993005152"),
                            ImageUrl = "https://indian-retailer.s3.ap-south-1.amazonaws.com/s3fs-public/2021-07/kosme1.png",
                            SubTitle = "",
                            Title = "cosmetics and body care"
                        },
                        new
                        {
                            Id = new Guid("bd62cefa-ffcd-44b4-8109-59f8a6f643b5"),
                            ImageUrl = "https://img.freepik.com/free-vector/ordering-goods-online-internet-store-online-shopping-niche-e-commerce-website-mother-buying-babies-clothes-footwear-toys-infant-accessories_335657-2345.jpg?w=2000",
                            SubTitle = "",
                            Title = "Accesories"
                        },
                        new
                        {
                            Id = new Guid("6e27b4b8-e66c-450a-bf41-58344b208512"),
                            ImageUrl = "https://www.shift4shop.com/2015/images/industries/clothing/clothing-apparel.png",
                            SubTitle = "",
                            Title = "Cloths"
                        },
                        new
                        {
                            Id = new Guid("418a55c2-6254-4bc7-9593-4a41665fd396"),
                            ImageUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQvBQPQMVNRd6TtDkGs2dCri0Y-rxKkFOiEWw&usqp=CAU",
                            SubTitle = "",
                            Title = "Shoes"
                        },
                        new
                        {
                            Id = new Guid("f9da526c-a651-4b98-81e0-240d29ffe55d"),
                            ImageUrl = "https://searchspring.com/wp-content/uploads/2022/10/Hero-Image-Platform-Others-2.png",
                            SubTitle = "",
                            Title = "Gifts"
                        },
                        new
                        {
                            Id = new Guid("fc7f2981-1031-4d10-8565-9cf93f211799"),
                            ImageUrl = "https://cdn.openpr.com/T/c/Tc15444071_g.jpg",
                            SubTitle = "",
                            Title = "Pet Care"
                        },
                        new
                        {
                            Id = new Guid("7475cdd9-3303-40bf-9cdf-61669a1f49f4"),
                            ImageUrl = "https://st-troy.mncdn.com/mnresize/1500/1500/Content/media/ProductImg/original/mpwp3tua-apple-iphone-14-256gb-mavi-mpwp3tua-637986832343472449.jpg",
                            SubTitle = "",
                            Title = "Mobile and Tablets"
                        },
                        new
                        {
                            Id = new Guid("8e1f3278-b97e-45a6-ab0f-4a373a6c264d"),
                            ImageUrl = "https://static.vecteezy.com/system/resources/previews/011/996/555/original/3d-black-headphone-illustration-ecommerce-icon-png.png",
                            SubTitle = "",
                            Title = "Music and Gaming"
                        },
                        new
                        {
                            Id = new Guid("fe58ddc2-61ee-4e1a-9402-a0c9ebfb8e5c"),
                            ImageUrl = "",
                            SubTitle = "",
                            Title = "Others"
                        });
                });

            modelBuilder.Entity("WebApi.Entities.Models.ImageUrl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ImageUrlId");

                    b.Property<Guid?>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PublicUrl")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ImageUrls");
                });

            modelBuilder.Entity("WebApi.Entities.Models.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ProductId");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Discount_Price")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("Price")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("Rating")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("Stock")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("Total_Sell")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("WebApi.Entities.Models.Review", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ReviewId");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<Guid?>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Rating")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("WebApi.Entities.Models.Shop", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ShopId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Ratings")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<Guid?>("ShopAvatarsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("ShopAvatarsId");

                    b.ToTable("Shops");
                });

            modelBuilder.Entity("WebApi.Entities.Models.ShopAvatar", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ShopAvatarId");

                    b.Property<string>("PublicId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ShopAvatars");
                });

            modelBuilder.Entity("WebApi.Entities.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserId");

                    b.Property<int?>("Age")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Hobby")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f3d2300a-c9cf-49b4-b137-aca949bf3b6a"),
                            Age = 36,
                            Birthday = new DateTime(2024, 5, 24, 18, 26, 25, 207, DateTimeKind.Local).AddTicks(4553),
                            Email = "oleitao@gmail.com",
                            FullName = "",
                            Hobby = "swiming",
                            Sex = "M"
                        });
                });

            modelBuilder.Entity("WebApi.Entities.Models.ImageUrl", b =>
                {
                    b.HasOne("WebApi.Entities.Models.Product", null)
                        .WithMany("ImageURLs")
                        .HasForeignKey("ProductId");
                });

            modelBuilder.Entity("WebApi.Entities.Models.Product", b =>
                {
                    b.HasOne("WebApi.Entities.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("WebApi.Entities.Models.Review", b =>
                {
                    b.HasOne("WebApi.Entities.Models.Product", null)
                        .WithMany("Reviews")
                        .HasForeignKey("ProductId");

                    b.HasOne("WebApi.Entities.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebApi.Entities.Models.Shop", b =>
                {
                    b.HasOne("WebApi.Entities.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApi.Entities.Models.ShopAvatar", "ShopAvatars")
                        .WithMany()
                        .HasForeignKey("ShopAvatarsId");

                    b.Navigation("Product");

                    b.Navigation("ShopAvatars");
                });

            modelBuilder.Entity("WebApi.Entities.Models.Product", b =>
                {
                    b.Navigation("ImageURLs");

                    b.Navigation("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
