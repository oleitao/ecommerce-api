// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApi.Repository;

#nullable disable

namespace WebApi.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    [Migration("20240607164801_AddedImageUrls")]
    partial class AddedImageUrls
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Model.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ImageUrl");

                    b.Property<string>("SubTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SubTitle");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Title");

                    b.HasKey("Id");

                    b.ToTable("Categories", (string)null);
                });

            modelBuilder.Entity("Model.ImageUrl", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ProductId");

                    b.Property<string>("PublicUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PublicUrl");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Url");

                    b.HasKey("Id");

                    b.ToTable("ImageUrls", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("18a8bf68-3644-4b8f-87a3-c65bd8e1779c"),
                            ProductId = new Guid("00000000-0000-0000-0000-000000000000"),
                            PublicUrl = "test",
                            Url = "https://www.istorebangladesh.com/images/thumbs/0000286_macbook-pro-m1_550.png"
                        },
                        new
                        {
                            Id = new Guid("a6279b4d-00b2-4c7e-8579-82ec4b456768"),
                            ProductId = new Guid("00000000-0000-0000-0000-000000000000"),
                            PublicUrl = "test",
                            Url = "https://www.custommacbd.com/cdn/shop/products/AppleMacBookProwithM2chip2022model_8GB_256GB_CustomMacBD_540x.jpg?v=1659438499"
                        },
                        new
                        {
                            Id = new Guid("8f9fb0ea-ff5d-4e96-8455-6c6aef5e0042"),
                            ProductId = new Guid("00000000-0000-0000-0000-000000000000"),
                            PublicUrl = "test",
                            Url = "https://m.media-amazon.com/images/I/31Vle5fVdaL.jpg"
                        },
                        new
                        {
                            Id = new Guid("e6bbe9e9-5e70-48e5-9545-7abf4510128c"),
                            ProductId = new Guid("00000000-0000-0000-0000-000000000000"),
                            PublicUrl = "test",
                            Url = "https://adminapi.applegadgetsbd.com/storage/media/large/iPhone-14-Pro-Max-Silver-8456.jpg"
                        },
                        new
                        {
                            Id = new Guid("225dd65a-a44d-48e8-ba5c-d35ee9d206ad"),
                            ProductId = new Guid("00000000-0000-0000-0000-000000000000"),
                            PublicUrl = "test",
                            Url = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcR_TxUk8mcOtG7_mZmNA6TOZZbADyp3L3HHCg&usqp=CAU"
                        },
                        new
                        {
                            Id = new Guid("e45a3732-6252-4cee-b7db-12176f53e548"),
                            ProductId = new Guid("00000000-0000-0000-0000-000000000000"),
                            PublicUrl = "test",
                            Url = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcR_TxUk8mcOtG7_mZmNA6TOZZbADyp3L3HHCg&usqp=CAU"
                        },
                        new
                        {
                            Id = new Guid("22cc1bc8-df00-49c4-8ea6-551ef1093654"),
                            ProductId = new Guid("00000000-0000-0000-0000-000000000000"),
                            PublicUrl = "test",
                            Url = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSSP2a13umWJp5HCeGtJtw9EuW8opwZfY7r6Q&usqp=CAU"
                        },
                        new
                        {
                            Id = new Guid("23d67a08-17d5-4284-94b1-1181775a30ce"),
                            ProductId = new Guid("00000000-0000-0000-0000-000000000000"),
                            PublicUrl = "test",
                            Url = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSSP2a13umWJp5HCeGtJtw9EuW8opwZfY7r6Q&usqp=CAU"
                        },
                        new
                        {
                            Id = new Guid("23eaf16c-722f-4bb8-802a-1f5f8ac333a7"),
                            ProductId = new Guid("00000000-0000-0000-0000-000000000000"),
                            PublicUrl = "test",
                            Url = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSSP2a13umWJp5HCeGtJtw9EuW8opwZfY7r6Q&usqp=CAU"
                        },
                        new
                        {
                            Id = new Guid("07190b2c-a06b-4f71-b701-2204e09ff40e"),
                            ProductId = new Guid("00000000-0000-0000-0000-000000000000"),
                            PublicUrl = "test",
                            Url = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRdUieJcGTqKDqG2pwd8y0PngaUFR0EvjuqPw&usqp=CAU"
                        },
                        new
                        {
                            Id = new Guid("0b3752fa-6194-457e-b2db-b43a72669f81"),
                            ProductId = new Guid("00000000-0000-0000-0000-000000000000"),
                            PublicUrl = "test",
                            Url = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRdUieJcGTqKDqG2pwd8y0PngaUFR0EvjuqPw&usqp=CAU"
                        },
                        new
                        {
                            Id = new Guid("c2c9a831-6841-4a81-a49b-8caa70ffb329"),
                            ProductId = new Guid("00000000-0000-0000-0000-000000000000"),
                            PublicUrl = "test",
                            Url = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcS1eifg73dBnUR8qM29W4H7iXk9NCRskq67KQ&usqp=CAU"
                        },
                        new
                        {
                            Id = new Guid("73f2328e-f6d9-46a9-9469-1d5d53ecd94e"),
                            ProductId = new Guid("00000000-0000-0000-0000-000000000000"),
                            PublicUrl = "test",
                            Url = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcS1eifg73dBnUR8qM29W4H7iXk9NCRskq67KQ&usqp=CAU"
                        },
                        new
                        {
                            Id = new Guid("709026b9-f5b0-4128-be9d-27eacc0d8986"),
                            ProductId = new Guid("00000000-0000-0000-0000-000000000000"),
                            PublicUrl = "test",
                            Url = "https://dlcdnwebimgs.asus.com/gain/0ad9bdfe-9c75-41fb-82f5-6a6bf25bab22/w800"
                        },
                        new
                        {
                            Id = new Guid("2a1db5a5-cbaf-450d-8e8c-058a100801bb"),
                            ProductId = new Guid("00000000-0000-0000-0000-000000000000"),
                            PublicUrl = "test",
                            Url = "https://dlcdnwebimgs.asus.com/gain/0ad9bdfe-9c75-41fb-82f5-6a6bf25bab22/w800"
                        },
                        new
                        {
                            Id = new Guid("4133e12d-5aec-4f1b-acc6-e34e94349995"),
                            ProductId = new Guid("00000000-0000-0000-0000-000000000000"),
                            PublicUrl = "test",
                            Url = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQc4HSepwRQjDLQitxc9LHPjdKN-8pYQPGlDA&usqp=CAU"
                        },
                        new
                        {
                            Id = new Guid("81ecfdae-7c60-4e62-ac93-1d9f43ff4ab8"),
                            ProductId = new Guid("00000000-0000-0000-0000-000000000000"),
                            PublicUrl = "test",
                            Url = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQc4HSepwRQjDLQitxc9LHPjdKN-8pYQPGlDA&usqp=CAU"
                        },
                        new
                        {
                            Id = new Guid("ff149aa5-8123-4354-b25c-045dd2b2465e"),
                            ProductId = new Guid("00000000-0000-0000-0000-000000000000"),
                            PublicUrl = "test",
                            Url = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT7lvpJRN10N75r-1ssE_0tpl9dvmOEiKQzXQ&usqp=CAU"
                        },
                        new
                        {
                            Id = new Guid("e19180d0-fd34-4d2e-a6f6-7ca06f0291f3"),
                            ProductId = new Guid("00000000-0000-0000-0000-000000000000"),
                            PublicUrl = "test",
                            Url = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT7lvpJRN10N75r-1ssE_0tpl9dvmOEiKQzXQ&usqp=CAU"
                        },
                        new
                        {
                            Id = new Guid("9acbdcdb-6dd9-4b9e-8883-715212e043f2"),
                            ProductId = new Guid("00000000-0000-0000-0000-000000000000"),
                            PublicUrl = "test",
                            Url = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTvyCDsCiIgME0mgv_vJYB-285xwWl3bC-pSw&usqp=CAU"
                        },
                        new
                        {
                            Id = new Guid("2b2b1923-4b1e-455f-b8d4-50d15e0cd400"),
                            ProductId = new Guid("00000000-0000-0000-0000-000000000000"),
                            PublicUrl = "test",
                            Url = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTvyCDsCiIgME0mgv_vJYB-285xwWl3bC-pSw&usqp=CAU"
                        },
                        new
                        {
                            Id = new Guid("aa87eaa4-80fa-405e-b6be-1b8f7767307d"),
                            ProductId = new Guid("00000000-0000-0000-0000-000000000000"),
                            PublicUrl = "test",
                            Url = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSwSpfSyrQUCFFTMei2zILF0-xFsIYgNgVVSA&usqp=CAU"
                        },
                        new
                        {
                            Id = new Guid("0d5acc25-407f-4d19-b35f-dcb036de5ff6"),
                            ProductId = new Guid("00000000-0000-0000-0000-000000000000"),
                            PublicUrl = "test",
                            Url = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSwSpfSyrQUCFFTMei2zILF0-xFsIYgNgVVSA&usqp=CAU"
                        },
                        new
                        {
                            Id = new Guid("9de31568-fcfc-4fac-9802-c89d305ad4c5"),
                            ProductId = new Guid("00000000-0000-0000-0000-000000000000"),
                            PublicUrl = "test",
                            Url = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSXd2u896WCZISe8VyWsmvOQhwbLREi0O93YQ&usqp=CAU"
                        },
                        new
                        {
                            Id = new Guid("c3b7866a-ce06-4dd0-96ce-a8beaed0ecb3"),
                            ProductId = new Guid("00000000-0000-0000-0000-000000000000"),
                            PublicUrl = "test",
                            Url = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSXd2u896WCZISe8VyWsmvOQhwbLREi0O93YQ&usqp=CAU"
                        },
                        new
                        {
                            Id = new Guid("8b86aff1-cfea-4d9c-864d-5f0cacbbefed"),
                            ProductId = new Guid("00000000-0000-0000-0000-000000000000"),
                            PublicUrl = "test",
                            Url = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQ6AmSV387Vy0EVlO6hYPgsKqPnIA_qxq41oA&usqp=CAU"
                        },
                        new
                        {
                            Id = new Guid("04bd6cf4-0586-4c5e-b780-565c5aaddf2e"),
                            ProductId = new Guid("00000000-0000-0000-0000-000000000000"),
                            PublicUrl = "test",
                            Url = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQ6AmSV387Vy0EVlO6hYPgsKqPnIA_qxq41oA&usqp=CAU"
                        },
                        new
                        {
                            Id = new Guid("6727e1e0-2659-4e8b-a7e3-63d2be994ddb"),
                            ProductId = new Guid("00000000-0000-0000-0000-000000000000"),
                            PublicUrl = "test",
                            Url = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTBOB80TIoBkL_NaeJ_5lG5LuUsD0IYEDXFJg&usqp=CAU"
                        },
                        new
                        {
                            Id = new Guid("3e1dd6df-29a4-4a8f-b93c-f10a605605e8"),
                            ProductId = new Guid("00000000-0000-0000-0000-000000000000"),
                            PublicUrl = "test",
                            Url = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcS2zcpFb-6hMeoBVWrfp4LazbLD3a1tEjJjY2oYq45yJOyb28WIIYBoJ3qZMsmFdImBSZk&usqp=CAU"
                        },
                        new
                        {
                            Id = new Guid("4b5607f3-c34a-46da-b4df-f2f12755b4dd"),
                            ProductId = new Guid("00000000-0000-0000-0000-000000000000"),
                            PublicUrl = "test",
                            Url = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcR1GMCvSHthjghTol1tXK_t4eW7Vk-EuBvdnQ&usqp=CAU"
                        },
                        new
                        {
                            Id = new Guid("718ac366-662c-42b5-9ed0-8a3c39acde59"),
                            ProductId = new Guid("00000000-0000-0000-0000-000000000000"),
                            PublicUrl = "test",
                            Url = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcR1GMCvSHthjghTol1tXK_t4eW7Vk-EuBvdnQ&usqp=CAU"
                        },
                        new
                        {
                            Id = new Guid("c1d7caad-996f-4d14-bcf6-bed000e43e25"),
                            ProductId = new Guid("00000000-0000-0000-0000-000000000000"),
                            PublicUrl = "test",
                            Url = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTg7XWy1cmt1D3uUjF29eo2q4HgqJaGEu9XDg&usqp=CAU"
                        },
                        new
                        {
                            Id = new Guid("fed653db-e3cd-44e5-b37a-ea4d19d60193"),
                            ProductId = new Guid("00000000-0000-0000-0000-000000000000"),
                            PublicUrl = "test",
                            Url = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTg7XWy1cmt1D3uUjF29eo2q4HgqJaGEu9XDg&usqp=CAU"
                        },
                        new
                        {
                            Id = new Guid("3c399f91-8644-48a2-9906-2c1221fe8bca"),
                            ProductId = new Guid("00000000-0000-0000-0000-000000000000"),
                            PublicUrl = "test",
                            Url = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQCEvcavb1VnIbFqFEh_5sgzYPgjcVAbFLl7g&usqp=CAU"
                        },
                        new
                        {
                            Id = new Guid("821415a9-549e-48fb-8ef2-51d8ef88b8b5"),
                            ProductId = new Guid("00000000-0000-0000-0000-000000000000"),
                            PublicUrl = "test",
                            Url = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQCEvcavb1VnIbFqFEh_5sgzYPgjcVAbFLl7g&usqp=CAU"
                        },
                        new
                        {
                            Id = new Guid("8a347ea8-2252-4d17-9ec7-8daaa7158359"),
                            ProductId = new Guid("00000000-0000-0000-0000-000000000000"),
                            PublicUrl = "test",
                            Url = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSdd3n1bpYxsBGOpZ6ZgUPIKdLVChEegzOBnQ&usqp=CAU"
                        },
                        new
                        {
                            Id = new Guid("489b46d7-49b6-4197-b00c-415ea26651bd"),
                            ProductId = new Guid("00000000-0000-0000-0000-000000000000"),
                            PublicUrl = "test",
                            Url = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSdd3n1bpYxsBGOpZ6ZgUPIKdLVChEegzOBnQ&usqp=CAU"
                        },
                        new
                        {
                            Id = new Guid("1f22a82f-0473-4a89-bd9a-4be271037677"),
                            ProductId = new Guid("00000000-0000-0000-0000-000000000000"),
                            PublicUrl = "test",
                            Url = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcR42FePhUrLX424aLie09J4Pfkn03T8h3D7PQ&usqp=CAU"
                        },
                        new
                        {
                            Id = new Guid("23924e2b-8f34-4075-9f8b-6b95182d8cc0"),
                            ProductId = new Guid("00000000-0000-0000-0000-000000000000"),
                            PublicUrl = "test",
                            Url = "https://www.lenovo.com/medias/lenovo-tablet-p10-2.png?context=bWFzdGVyfHJvb3R8NTI0NzIyfGltYWdlL3BuZ3xoM2IvaDFkLzk4MTA1NjI0ODIyMDYucG5nfDI1OGI3YjlkODNkMzI2OThkOWEwMjM1NjliNjI5ZDQ3ZjMxZTg4ZDQ5ZmE5NGY3NTEyYjMwYTA0NDBlM2VhZDA"
                        },
                        new
                        {
                            Id = new Guid("253648de-08d9-49c7-a74d-7aabfe2ecd31"),
                            ProductId = new Guid("00000000-0000-0000-0000-000000000000"),
                            PublicUrl = "test",
                            Url = "https://www.lenovo.com/medias/lenovo-tablet-p10-2.png?context=bWFzdGVyfHJvb3R8NTI0NzIyfGltYWdlL3BuZ3xoM2IvaDFkLzk4MTA1NjI0ODIyMDYucG5nfDI1OGI3YjlkODNkMzI2OThkOWEwMjM1NjliNjI5ZDQ3ZjMxZTg4ZDQ5ZmE5NGY3NTEyYjMwYTA0NDBlM2VhZDA"
                        },
                        new
                        {
                            Id = new Guid("729b6a9a-9033-4e2a-89de-57dd81e2a30a"),
                            ProductId = new Guid("00000000-0000-0000-0000-000000000000"),
                            PublicUrl = "test",
                            Url = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRoJTwIqCk049REtJbZL5xEYO5W9m6iUiSRSg&usqp=CAU"
                        },
                        new
                        {
                            Id = new Guid("932e1859-ed95-45a3-bb89-5802f40efca3"),
                            ProductId = new Guid("00000000-0000-0000-0000-000000000000"),
                            PublicUrl = "test",
                            Url = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRoJTwIqCk049REtJbZL5xEYO5W9m6iUiSRSg&usqp=CAU"
                        },
                        new
                        {
                            Id = new Guid("4d44f2c7-2872-478e-a0a9-60d589062c0d"),
                            ProductId = new Guid("00000000-0000-0000-0000-000000000000"),
                            PublicUrl = "test",
                            Url = "https://www.istorebangladesh.com/images/thumbs/0000286_macbook-pro-m1_550.png"
                        },
                        new
                        {
                            Id = new Guid("9fa6cc75-8503-47e3-9bf7-4c8df2dcb70e"),
                            ProductId = new Guid("00000000-0000-0000-0000-000000000000"),
                            PublicUrl = "test",
                            Url = "https://www.istorebangladesh.com/images/thumbs/0000286_macbook-pro-m1_550.png"
                        },
                        new
                        {
                            Id = new Guid("1cb5cf4c-333c-4790-a980-e67736e906e1"),
                            ProductId = new Guid("00000000-0000-0000-0000-000000000000"),
                            PublicUrl = "test",
                            Url = "https://i0.wp.com/eccocibd.com/wp-content/uploads/2022/01/1802NL02_1.png?fit=550%2C550&ssl=1"
                        },
                        new
                        {
                            Id = new Guid("70f8904f-264f-4ff4-a2a9-0c1b801b97a2"),
                            ProductId = new Guid("00000000-0000-0000-0000-000000000000"),
                            PublicUrl = "test",
                            Url = "https://i0.wp.com/eccocibd.com/wp-content/uploads/2022/01/1802NL02_1.png?fit=550%2C550&ssl=1"
                        },
                        new
                        {
                            Id = new Guid("a77d8ec7-a22b-4563-92fe-22f48056ce8d"),
                            ProductId = new Guid("00000000-0000-0000-0000-000000000000"),
                            PublicUrl = "test",
                            Url = "https://mirzacdns3.s3.ap-south-1.amazonaws.com/cache/catalog/RLV0015/2-800x800.jpg"
                        },
                        new
                        {
                            Id = new Guid("ada1e4f7-2ecc-4abb-a181-68e3aff57b6d"),
                            ProductId = new Guid("00000000-0000-0000-0000-000000000000"),
                            PublicUrl = "test",
                            Url = "https://mirzacdns3.s3.ap-south-1.amazonaws.com/cache/catalog/RLV0015/2-800x800.jpg"
                        },
                        new
                        {
                            Id = new Guid("b82427c3-67a7-4e85-b4ef-bef29295c004"),
                            ProductId = new Guid("00000000-0000-0000-0000-000000000000"),
                            PublicUrl = "test",
                            Url = "https://i0.wp.com/eccocibd.com/wp-content/uploads/2022/01/1802NL02_1.png?fit=550%2C550&ssl=1"
                        },
                        new
                        {
                            Id = new Guid("d481f71e-df11-4dc7-945f-922d33897a0d"),
                            ProductId = new Guid("00000000-0000-0000-0000-000000000000"),
                            PublicUrl = "test",
                            Url = "https://i0.wp.com/eccocibd.com/wp-content/uploads/2022/01/1802NL02_1.png?fit=550%2C550&ssl=1"
                        },
                        new
                        {
                            Id = new Guid("4c41e2dc-e327-4dc2-83c1-649880f947bd"),
                            ProductId = new Guid("00000000-0000-0000-0000-000000000000"),
                            PublicUrl = "test",
                            Url = "https://m.media-amazon.com/images/I/31Vle5fVdaL.jpg"
                        },
                        new
                        {
                            Id = new Guid("24c4615e-ce3f-47d8-8c4e-51ad31ac3cfd"),
                            ProductId = new Guid("00000000-0000-0000-0000-000000000000"),
                            PublicUrl = "test",
                            Url = "https://m.media-amazon.com/images/I/31Vle5fVdaL.jpg"
                        },
                        new
                        {
                            Id = new Guid("5df652aa-f508-4c81-bfa8-ce6dcbe42ee2"),
                            ProductId = new Guid("00000000-0000-0000-0000-000000000000"),
                            PublicUrl = "test",
                            Url = "https://www.startech.com.bd/image/cache/catalog/headphone/havit/h763d/h763d-02-500x500.jpg"
                        },
                        new
                        {
                            Id = new Guid("f701eb94-2369-418c-9556-7c67d04278f7"),
                            ProductId = new Guid("00000000-0000-0000-0000-000000000000"),
                            PublicUrl = "test",
                            Url = "https://eratablet.com/wp-content/uploads/2022/08/H51ba6537405f4948972e293927673546u.jpg"
                        },
                        new
                        {
                            Id = new Guid("01729c70-97c7-4f8a-86c9-803df55910b2"),
                            ProductId = new Guid("00000000-0000-0000-0000-000000000000"),
                            PublicUrl = "test",
                            Url = "https://www.bdstall.com/asset/product-image/giant_213181.jpg"
                        },
                        new
                        {
                            Id = new Guid("9a83a1b6-be6a-40af-b1b8-65f6375766a7"),
                            ProductId = new Guid("00000000-0000-0000-0000-000000000000"),
                            PublicUrl = "test",
                            Url = "https://unixnetworkbd.com/image/cache/wp/gj/unix_network_images/product/gaming-pc-9th-gen-core-i7-9700k/Gaming-PC-9th-Gen-Core-i7-9700k-Unix-Computer-jashore-bangladesh-500x500.webp"
                        });
                });

            modelBuilder.Entity("Model.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CategoryId");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Description");

                    b.Property<int>("DiscountPrice")
                        .HasColumnType("int")
                        .HasColumnName("DiscountPrice");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.Property<int>("Price")
                        .HasColumnType("int")
                        .HasColumnName("Price");

                    b.Property<int>("Rating")
                        .HasColumnType("int")
                        .HasColumnName("Rating");

                    b.Property<Guid>("ShopId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ShopId");

                    b.Property<int>("Stock")
                        .HasColumnType("int")
                        .HasColumnName("Stock");

                    b.Property<int>("TotalSell")
                        .HasColumnType("int")
                        .HasColumnName("TotalSell");

                    b.HasKey("Id");

                    b.ToTable("Products", (string)null);
                });

            modelBuilder.Entity("Model.Review", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Comment");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ProductId");

                    b.Property<int>("Rating")
                        .HasColumnType("int")
                        .HasColumnName("Rating");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserId");

                    b.HasKey("Id");

                    b.ToTable("Reviews", (string)null);
                });

            modelBuilder.Entity("Model.Shop", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.Property<int>("Ratings")
                        .HasColumnType("int")
                        .HasColumnName("Ratings");

                    b.Property<Guid>("ShopAvatarId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ShopAvatarId");

                    b.HasKey("Id");

                    b.ToTable("Shops", (string)null);
                });

            modelBuilder.Entity("Model.ShopAvatar", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("PublicId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PublicId");

                    b.Property<Guid>("ShopId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ShopId");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Url");

                    b.HasKey("Id");

                    b.ToTable("ShopAvatars", (string)null);
                });

            modelBuilder.Entity("Model.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("Id");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<int>("Age")
                        .HasColumnType("int")
                        .HasColumnName("Age");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2")
                        .HasColumnName("Birthday");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("Email");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("FullName");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Gender");

                    b.Property<string>("Hobby")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Hobby");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Model.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Model.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Model.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Model.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
