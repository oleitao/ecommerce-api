version: '3.4'

services:

  nginx:
    image: nginx:latest
    container_name: reverse_proxy
    volumes:
      - ./nginx/config:/etc/nginx/conf.d/  
      - ./nginx/logs:/var/log/nginx/ 
    ports:
      - "3000:80"
      - "3001:443"
    #depends_on:
    #  - webapi_1
    #  - webapi_2
    #  - webapi_3


  myredis:
    image: redis:7.0
    restart: always
    ports:
      - "6379:6379"


  mysql:
    image: mysql:8.0.22
    container_name: mysqldb
    ports:
      - "3306:3306"
    expose: 
      - 3306
    volumes:
      - db-volume:/var/lib/mysql
    restart: always
    environment: 
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: root
      MYSQL_PASSWORD: root
      MYSQL_DATABASE: ecommerce-db

  elasticsearch:  
    container_name: elasticsearch  
    image: docker.elastic.co/elasticsearch/elasticsearch:8.7.1 
    ports:  
      - 9200:9200
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    environment:
      - xpack.security.enabled=false 
      - discovery.type=single-node  
    networks:  
      - elastic

  kibana:  
    container_name: kibana  
    image: docker.elastic.co/kibana/kibana:8.7.1 
    ports:  
      - 5601:5601  
    depends_on:  
      - elasticsearch  
    environment:  
      - ELASTICSEARCH_URL=http://localhost:9200  
    networks:  
     - elastic 


  #webapi_1:
  #  image: ${DOCKER_REGISTRY-}webapi
  #  restart: always
  #  links:
  #    - mysql
  #    - myredis
  #    - elasticsearch
  #  build:
  #    context: .
  #    dockerfile: WebApi/Dockerfile
  #  ports:
  #     - "5000"
  #  environment: 
  #    - DBHOST=mysql
  #    - ASPNETCORE_ENVIRONMENT=Development
  #    - REDIS_HOST=myredis
  #    - REDIS_USER=redisroot
  #    - REDIS_PASS=redisroot
  #    - REDIS_PORT=6379
  #    - REDIS_DB=0
  #  volumes:
  #    - volumetest:/tmp/volumetest
  #  networks:
  #   - elastic 
 

  #webapi_2:
  #  image: ${DOCKER_REGISTRY-}webapi
  #  restart: always
  #  links:
  #    - mysql
  #    - myredis
  #    - elasticsearch
  #  build:
  #    context: .
  #    dockerfile: WebApi/Dockerfile
  #  ports:
  #     - "5000"
  #  environment: 
  #    - DBHOST=mysql
  #    - ASPNETCORE_ENVIRONMENT=Development
  #    - REDIS_HOST=myredis
  #    - REDIS_USER=redisroot
  #    - REDIS_PASS=redisroot
  #    - REDIS_PORT=6379
  #    - REDIS_DB=0
  #  volumes:
  #    - volumetest:/tmp/volumetest
  #  networks:
  #   - elastic 


  #webapi_3:
  #  image: ${DOCKER_REGISTRY-}webapi
  #  restart: always
  #  links:
  #    - mysql
  #    - myredis
  #    - elasticsearch
  #  build:
  #    context: .
  #    dockerfile: WebApi/Dockerfile
  #  ports:
  #     - "5000"
  #  environment: 
  #    - DBHOST=mysql
  #    - ASPNETCORE_ENVIRONMENT=Development
  #    - REDIS_HOST=myredis
  #    - REDIS_USER=redisroot
  #    - REDIS_PASS=redisroot
  #    - REDIS_PORT=6379
  #    - REDIS_DB=0
  #  volumes:
  #    - volumetest:/tmp/volumetest
  #  networks:
  #   - elastic 

networks:  
  elastic:  
    driver: bridge  

volumes:
  redis_data:
  db-volume:
  elasticsearch-data: 
  # volumetest:
  #     external: false