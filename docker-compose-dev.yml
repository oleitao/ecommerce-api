version: '3.4'

services:

  myredis:
    image: redis:7.0
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
      - ./redis/users.acl:/etc/redis/users.acl
    command: redis-server /usr/local/etc/redis/redis.conf


  database:
    image: mysql:8.0.22
    container_name: mysqldb
    ports:
      - "3306:3306"
    expose: 
      - 3306
    volumes:
      - db-volume:/var/lib/mysql
    restart: always
    environment: 
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: root
      MYSQL_PASSWORD: root
      MYSQL_DATABASE: ecommerce-db

  nginx:
    image: nginx:latest
    container_name: reverse_proxy
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "3000:80"
      - "3001:443"
    networks:
      - load-balancing
    depends_on:
      - webapi


   webapi:
     image: ${DOCKER_REGISTRY-}webapi
     restart: always
     depends_on:
       - database
       - myredis
     build:
       context: .
       dockerfile: WebApi/Dockerfile
     ports:
       - "5000:80"
     environment: 
       - DBHOST=database
       - ASPNETCORE_ENVIRONMENT=Development
       - REDIS_HOST=myredis
       - REDIS_USER=redisroot
       - REDIS_PASS=redisroot
       - REDIS_PORT=6379
       - REDIS_DB=0
     networks:
       - load-balancing

volumes:
  redis_data:
  db-volume:
  
networks:
  load-balancing: